// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLUpdateDialogPinned : TLUpdateBase 
	{
		[Flags]
		public enum Flag : Int32
		{
			Pinned = (1 << 0),
		}

		public bool IsPinned { get { return Flags.HasFlag(Flag.Pinned); } set { Flags = value ? (Flags | Flag.Pinned) : (Flags & ~Flag.Pinned); } }

		public Flag Flags { get; set; }
		public TLPeerBase Peer { get; set; }

		public TLUpdateDialogPinned() { }
		public TLUpdateDialogPinned(TLBinaryReader from, bool cache = false)
		{
			Read(from, cache);
		}

		public override TLType TypeId { get { return TLType.UpdateDialogPinned; } }

		public override void Read(TLBinaryReader from, bool cache = false)
		{
			Flags = (Flag)from.ReadInt32();
			Peer = TLFactory.Read<TLPeerBase>(from, cache);
			if (cache) ReadFromCache(from);
		}

		public override void Write(TLBinaryWriter to, bool cache = false)
		{
			to.Write(0xD711A2CC);
			to.Write((Int32)Flags);
			to.WriteObject(Peer, cache);
			if (cache) WriteToCache(to);
		}
	}
}