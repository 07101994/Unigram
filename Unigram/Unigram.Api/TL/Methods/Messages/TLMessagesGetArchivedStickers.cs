// <auto-generated/>
using System;

namespace Telegram.Api.TL.Methods.Messages
{
	/// <summary>
	/// RCP method messages.getArchivedStickers
	/// </summary>
	public partial class TLMessagesGetArchivedStickers : TLObject
	{
		[Flags]
		public enum Flag : Int32
		{
			Masks = (1 << 0),
		}

		public bool IsMasks { get { return Flags.HasFlag(Flag.Masks); } set { Flags = value ? (Flags | Flag.Masks) : (Flags & ~Flag.Masks); } }

		public Flag Flags { get; set; }
		public Int64 OffsetId { get; set; }
		public Int32 Limit { get; set; }

		public TLMessagesGetArchivedStickers() { }
		public TLMessagesGetArchivedStickers(TLBinaryReader from, bool cache = false)
		{
			Read(from, cache);
		}

		public override TLType TypeId { get { return TLType.MessagesGetArchivedStickers; } }

		public override void Read(TLBinaryReader from, bool cache = false)
		{
			Flags = (Flag)from.ReadInt32();
			OffsetId = from.ReadInt64();
			Limit = from.ReadInt32();
			if (cache) ReadFromCache(from);
		}

		public override void Write(TLBinaryWriter to, bool cache = false)
		{
			to.Write(0x57F17692);
			to.Write((Int32)Flags);
			to.Write(OffsetId);
			to.Write(Limit);
			if (cache) WriteToCache(to);
		}
	}
}