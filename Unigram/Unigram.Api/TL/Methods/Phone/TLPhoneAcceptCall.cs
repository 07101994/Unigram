// <auto-generated/>
using System;

namespace Telegram.Api.TL.Methods.Phone
{
	/// <summary>
	/// RCP method phone.acceptCall
	/// </summary>
	public partial class TLPhoneAcceptCall : TLObject
	{
		public TLInputPhoneCall Peer { get; set; }
		public Byte[] GB { get; set; }
		public Int64 KeyFingerprint { get; set; }
		public TLPhoneCallProtocol Protocol { get; set; }

		public TLPhoneAcceptCall() { }
		public TLPhoneAcceptCall(TLBinaryReader from, bool cache = false)
		{
			Read(from, cache);
		}

		public override TLType TypeId { get { return TLType.PhoneAcceptCall; } }

		public override void Read(TLBinaryReader from, bool cache = false)
		{
			Peer = TLFactory.Read<TLInputPhoneCall>(from, cache);
			GB = from.ReadByteArray();
			KeyFingerprint = from.ReadInt64();
			Protocol = TLFactory.Read<TLPhoneCallProtocol>(from, cache);
			if (cache) ReadFromCache(from);
		}

		public override void Write(TLBinaryWriter to, bool cache = false)
		{
			to.Write(0x220F0B20);
			to.WriteObject(Peer, cache);
			to.WriteByteArray(GB);
			to.Write(KeyFingerprint);
			to.WriteObject(Protocol, cache);
			if (cache) WriteToCache(to);
		}
	}
}