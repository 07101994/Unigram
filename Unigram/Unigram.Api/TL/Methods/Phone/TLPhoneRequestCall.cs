// <auto-generated/>
using System;

namespace Telegram.Api.TL.Methods.Phone
{
	/// <summary>
	/// RCP method phone.requestCall
	/// </summary>
	public partial class TLPhoneRequestCall : TLObject
	{
		public TLInputUserBase UserId { get; set; }
		public Int32 RandomId { get; set; }
		public Byte[] GA { get; set; }
		public TLPhoneCallProtocol Protocol { get; set; }

		public TLPhoneRequestCall() { }
		public TLPhoneRequestCall(TLBinaryReader from, bool cache = false)
		{
			Read(from, cache);
		}

		public override TLType TypeId { get { return TLType.PhoneRequestCall; } }

		public override void Read(TLBinaryReader from, bool cache = false)
		{
			UserId = TLFactory.Read<TLInputUserBase>(from, cache);
			RandomId = from.ReadInt32();
			GA = from.ReadByteArray();
			Protocol = TLFactory.Read<TLPhoneCallProtocol>(from, cache);
			if (cache) ReadFromCache(from);
		}

		public override void Write(TLBinaryWriter to, bool cache = false)
		{
			to.Write(0xA41AA5E4);
			to.WriteObject(UserId, cache);
			to.Write(RandomId);
			to.WriteByteArray(GA);
			to.WriteObject(Protocol, cache);
			if (cache) WriteToCache(to);
		}
	}
}